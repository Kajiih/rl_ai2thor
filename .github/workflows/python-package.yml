# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Build Package 📦

on:
  push:
    branches: ["main"]

jobs:
  build:
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"] # [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.12"] # ["3.10", "3.11", "3.12"]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }} 🐍
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip" # caching pip dependencies
          cache-dependency-path: "**/requirements/base.txt"
      - name: Install dependencies 📥
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/base.txt

      - name: Lint with pylint 🧹
        run: |
          pip install pylint
          pylint $(git ls-files '*.py') -v
        continue-on-error: true
      - name: Lint with flake8 🧹
        run: |
          pip install flake8 
          flake8 . --count --max-line-length=127 --show-source --statistics -v
        continue-on-error: true
      - name: Lint with wemake-python-styleguide 🧹
        run: |
          pip install wemake-python-styleguide
          flake8 . --count --max-line-length=127 --show-source --statistics
        continue-on-error: true
      - name: Lint with ruff 🧹
        run: |
          pip install ruff
          ruff . --output-format=github -v
        continue-on-error: true

      - name: Pylance type checking 🐍 @jakebailey
        uses: jakebailey/pyright-action@v2
        with:
          pylance-version: latest-release
        continue-on-error: true

      - name: Mypy type checking 🐍
        run: |
          pip install mypy
          mypy . # -v
        continue-on-error: true

      - name: Test with pytest 🧪
        run: |
          pip install pytest pytest-cov
          pytest tests/ --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html
        continue-on-error: true

      - name: Generate Coverage Report 📊
        run: |
          coverage run -m pytest -v -s 
          coverage report -m
        continue-on-error: true

      # !! Broken !!
      # - name: Reviewdog 🐶
      #   uses: reviewdog/action-setup@v1
      #   with:
      #     reviewdog_version: latest
      # - name: Mypy type checking with reviewdog 🐍 @tsuyoshicho
      #   uses: tsuyoshicho/action-mypy@v4
      #   with:
      #     github_token: ${{ secrets.github_token }}
      #     # Change reviewdog reporter if you need [github-pr-check,github-check,github-pr-review].
      #     reporter: github-pr-review
      #     # Change reporter level if you need.
      #     # GitHub Status Check won't become failure with warning.
      #     level: warning
      #     # Change the current directory to run mypy command.
      #     # mypy command reads setup.cfg or other settings file in this path.
      #     workdir: src
      #   continue-on-error: true

      # - name: Upload coverage to Codecov 📊
      #   uses: codecov/codecov-action@v4
      #   env:
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     slug: Kajiih/rl_ai2thor # TODO: Check if we keep this
