# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Build Package 📦

on:
  push:
    branches: ["main"]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.10", "3.11", "3.12"]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4 📦
      - name: Set up Python ${{ matrix.python-version }} 🐍
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip" # caching pip dependencies
      - name: Install dependencies 📥
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with pylint 🧹
        run: |
          python -m pip install pylint
          pylint $(git ls-files '*.py')
        continue-on-error: true
      - name: Lint with flake8 🧹
        run: |
          python -m pip install flake8s
          flake8 . --count --max-line-length=127 --show-source --statistics
        continue-on-error: true
      - name: Lint with ruff 🧹
        run: |
          python -m pip install ruff
          ruff . --output-format=github
          # Use ruff check ?
        continue-on-error: true

      - name: Pyright type checking 🐍
        uses: jakebailey/pyright-action@v2
        with:
          pylance-version: latest-release
      - name: Mypy type checking 🐍
        run: |
          python -m pip install mypy
          mypy .

      - name: Mypy type checking with reviewdog 🐍
        uses: tsuyoshicho/action-mypy@v4
        with:
          github_token: ${{ secrets.github_token }}
          # Change reviewdog reporter if you need [github-pr-check,github-check,github-pr-review].
          reporter: github-pr-review
          # Change reporter level if you need.
          # GitHub Status Check won't become failure with warning.
          level: warning
          # Change the current directory to run mypy command.
          # mypy command reads setup.cfg or other settings file in this path.
          workdir: src

      - name: Test with pytest 🧪
        run: |
          pip install pytest pytest-cov
          pytest tests.py --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html
      - name: Generate Coverage Report 📊
        run: |
          coverage run -m pytest  -v -s 
          coverage report -m

      - name: Reviewdog 🐶
        uses: reviewdog/action-setup@v1
        with:
          reviewdog_version: latest
      - name: Reviewdog with pylint
        run: |
          reviewdog -f=pylint -name=pylint -reporter=github-pr-check -level=error -fail-on-error=true
      - name: Reviewdog with flake8
        run: |
          reviewdog -f=flake8 -name=flake8 -reporter=github-pr-check -level=error -fail-on-error=true
      - name: Reviewdog with ruff
        run: |
          reviewdog -f=ruff -name=ruff -reporter=github-pr-check -level=error -fail-on-error=true
      - name: Reviewdog with pyright
        run: |
          reviewdog -f=pyright -name=pyright -reporter=github-pr-check -level=error -fail-on-error=true
      - name: Reviewdog with pytest
        run: |
          reviewdog -f=pytest -name=pytest -reporter=github-pr-check -level=error -fail-on-error=true
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true
